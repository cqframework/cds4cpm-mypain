pipeline {
  agent any
  stages {

    stage('Set environment') {
      steps {
        script {
          def environment = 'staging'
          if (env.GIT_BRANCH != 'origin/master') {
            environment = env.GIT_BRANCH.split("/")[1]
          }

          env.ENVIRONMENT_NAME = environment
          println("Environment: ${env.ENVIRONMENT_NAME}");

          env.DOCKER_LABEL = environment;

          if (env.ENVIRONMENT_NAME == 'staging') {
            env.CLOUDFRONT_DISTRIBUTION = 'E3MM1APWOMZXHB'
            env.DOCKER_LABEL = 'latest'
          }
          else if (env.ENVIRONMENT_NAME == 'develop') {
            env.CLOUDFRONT_DISTRIBUTION = 'E241WF4QIREH4O'
            env.DOCKER_LABEL = 'develop'
          }
          else if (env.ENVIRONMENT_NAME == 'my-pain-staging') {
            env.CLOUDFRONT_DISTRIBUTION = 'E241WF4QIREH4O'
            env.DOCKER_LABEL = 'v0.5.0'
          }
          println("CloudFront Distribution: ${env.CLOUDFRONT_DISTRIBUTION}");
          println("Docker Label: ${env.DOCKER_LABEL}");
        }
      }
    }

    stage('Docker Build') {
      steps {
        sh "docker build -t alphora/my-pain:${env.DOCKER_LABEL} ."
      }
    }

    stage('Docker Push') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-jpercival', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
          sh 'docker login -u $dockerHubUser -p $dockerHubPassword'
          sh "docker push alphora/my-pain:${env.DOCKER_LABEL}"
        }
      }
    }
  }
}